{"version":3,"sources":["services/people.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handleFilter","type","value","onChange","e","target","PersonForm","newName","newPhone","handleName","handlePhone","addPhone","onClick","Persons","persons","removePerson","map","p","name","number","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewPhone","setFilter","setMessage","useEffect","personService","initialNotes","withNotify","setTimeout","length","toLowerCase","includes","preventDefault","exist","find","newPerson","window","confirm","personUpdated","person","catch","err","updatePerson","alert","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecf4efba.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then(response => response.data);\n};\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then(response => response.data);\n};\n\nconst drop = id => {\n\tconst request = axios.delete(`${baseUrl}/${id}`);\n\treturn request.then(response => response.data);\n};\n\nexport default { getAll, create, update, drop };\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport personService from './services/people';\n\nconst Filter = ({ filter, handleFilter }) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter shown with{' '}\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={filter}\n\t\t\t\tonChange={e =>\n\t\t\t\t\thandleFilter(e.target.value)\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst PersonForm = ({\n\tnewName,\n\tnewPhone,\n\thandleName,\n\thandlePhone,\n\taddPhone,\n}) => {\n\treturn (\n\t\t<form>\n\t\t\t<div>\n\t\t\t\tname:{' '}\n\t\t\t\t<input\n\t\t\t\t\tvalue={newName}\n\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\thandleName(e.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber:{' '}\n\t\t\t\t<input\n\t\t\t\t\tvalue={newPhone}\n\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\thandlePhone(e.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type='submit' onClick={addPhone}>\n\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nconst Persons = ({ persons, removePerson }) => {\n\treturn (\n\t\t<>\n\t\t\t{persons.map(p => (\n\t\t\t\t<div key={p.name}>\n\t\t\t\t\t{p.name} {p.number}{' '}\n\t\t\t\t\t<button onClick={() => removePerson(p)}>\n\t\t\t\t\t\tdelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\nconst Notification = ({ notification }) => {\n\tif (notification == null) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<div className={notification.type}>\n\t\t\t{notification.message}\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newPhone, setNewPhone] = useState('');\n\tconst [filter, setFilter] = useState('');\n\tconst [message, setMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tpersonService.getAll().then(initialNotes => {\n\t\t\tsetPersons(initialNotes);\n\t\t});\n\t}, []);\n\n\tconst withNotify = (message, type = 'info') => {\n\t\tsetMessage({ message, type });\n\t\tsetTimeout(() => {\n\t\t\tsetMessage(null);\n\t\t}, 3000);\n\t};\n\n\tconst removePerson = ({ id, name }) => {\n\t\tif (window.confirm(`Delete ${name} ?`)) {\n\t\t\tpersonService.drop(id).then(() => {\n\t\t\t\tsetPersons(\n\t\t\t\t\tpersons.filter(\n\t\t\t\t\t\tperson => person.id !== id\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst updatePerson = (newPhone, exist) => {\n\t\tconst newPerson = {\n\t\t\t...exist,\n\t\t\tnumber: newPhone,\n\t\t};\n\t\tif (\n\t\t\twindow.confirm(\n\t\t\t\t`${exist.name} is already added to phonebook, replace the old number with a new one?`\n\t\t\t)\n\t\t) {\n\t\t\tpersonService\n\t\t\t\t.update(exist.id, newPerson)\n\t\t\t\t.then(personUpdated => {\n\t\t\t\t\tsetPersons(\n\t\t\t\t\t\tpersons.map(person =>\n\t\t\t\t\t\t\tperson.id === exist.id\n\t\t\t\t\t\t\t\t? personUpdated\n\t\t\t\t\t\t\t\t: person\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tsetNewPhone('');\n\t\t\t\t\tsetNewName('');\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\twithNotify(\n\t\t\t\t\t\t`Information of ${exist.name} has already been removed from server`,\n\t\t\t\t\t\t'error'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst addPhone = e => {\n\t\te.preventDefault();\n\t\tconst exist = persons.find(\n\t\t\tp => p.name === newName\n\t\t);\n\t\tif (!exist) {\n\t\t\tconst newPerson = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newPhone,\n\t\t\t};\n\t\t\tpersonService\n\t\t\t\t.create(newPerson)\n\t\t\t\t.then(person => {\n\t\t\t\t\tsetPersons([...persons, person]);\n\t\t\t\t\tsetNewName('');\n\t\t\t\t\tsetNewPhone('');\n\t\t\t\t\twithNotify(`Added ${newName}`);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\twithNotify(\n\t\t\t\t\t\terr.response?.data?.error || 'Error',\n\t\t\t\t\t\t'error'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t} else {\n\t\t\tif (newPhone !== exist.number) {\n\t\t\t\tupdatePerson(newPhone, exist);\n\t\t\t} else {\n\t\t\t\talert(\n\t\t\t\t\t`${newName} is already added to phonebook`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst data =\n\t\tfilter.length > 0\n\t\t\t? persons.filter(p =>\n\t\t\t\t\tp.name\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(filter.toLowerCase())\n\t\t\t  )\n\t\t\t: persons;\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification notification={message} />\n\t\t\t<Filter\n\t\t\t\tfilter={filter}\n\t\t\t\thandleFilter={e => setFilter(e)}\n\t\t\t/>\n\t\t\t<PersonForm\n\t\t\t\tnewName={newName}\n\t\t\t\tnewPhone={newPhone}\n\t\t\t\taddPhone={addPhone}\n\t\t\t\thandleName={e => setNewName(e)}\n\t\t\t\thandlePhone={e => setNewPhone(e)}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons\n\t\t\t\tpersons={data}\n\t\t\t\tremovePerson={person =>\n\t\t\t\t\tremovePerson(person)\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}